/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.nachoverdon.mss.view;

import com.nachoverdon.mss.model.IconItem;
import com.nachoverdon.mss.model.Icons;
import com.nachoverdon.mss.utils.AutoCompletion;
import com.nachoverdon.mss.utils.FileUtils;
import java.awt.Component;
import java.util.Arrays;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JList;
import org.json.JSONObject;

/**
 *
 * @author bazoo
 */
public class CrewMemberPanel extends javax.swing.JPanel {

    /**
     * Creates new form CrewMemberPanel
     */
    public CrewMemberPanel() {
        initComponents();
        initFields();
    }
    
    private void initFields() {
        try {
            initNames();
            initCharacters();
        } catch (NullPointerException e) {
            e.printStackTrace();
        }
    }
    
    private void initNames() {
        String[] names = FileUtils.getNames();
        AutoCompletion.enable(comboBoxName);

        comboBoxName.addItem("");
        for (String n : names) {
            comboBoxName.addItem(n);
        }
    }
    
    private void initCharacters() {
        JSONObject charJson = FileUtils.getCharacters();

        String[] characters = new String[]{};
        characters = charJson.keySet().toArray(characters);
        Arrays.sort(characters);
        comboBoxCharacter.removeAllItems();
        comboBoxCharacter.setRenderer(new IconRendererNoText());


        for (String character : characters) {

            IconItem item = new IconItem(
                    character,
                    Icons.getColors().get(character + "Vanilla")
            );

            comboBoxCharacter.addItem(item);
        }
    }

    public JSONObject getInfo() {
        JSONObject json = new JSONObject();

        String name = (String) comboBoxName.getSelectedItem();

        if (name == null || name.equals("")) {
            return null;
        }

        json.put("name", name);
        json.put("character", IconItem.getItemName(comboBoxCharacter));
        json.put("stocksLeft", stocksTaken.getValue());
        json.put("stocksTaken", stocksLeft.getValue());

        return json;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboBoxName = new javax.swing.JComboBox<>();
        comboBoxCharacter = new javax.swing.JComboBox<>();
        stocksLeft = new javax.swing.JSpinner();
        stocksTaken = new javax.swing.JSpinner();

        comboBoxName.setEditable(true);
        comboBoxName.setToolTipText("");
        comboBoxName.setMaximumSize(new java.awt.Dimension(128, 26));
        comboBoxName.setName(""); // NOI18N

        comboBoxCharacter.setToolTipText("");
        comboBoxCharacter.setMaximumSize(new java.awt.Dimension(128, 26));
        comboBoxCharacter.setName(""); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(comboBoxName, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(comboBoxCharacter, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(stocksLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stocksTaken, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(comboBoxName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(comboBoxCharacter, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(stocksLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(stocksTaken, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<IconItem> comboBoxCharacter;
    private javax.swing.JComboBox<String> comboBoxName;
    private javax.swing.JSpinner stocksLeft;
    private javax.swing.JSpinner stocksTaken;
    // End of variables declaration//GEN-END:variables
}

class IconRendererNoText extends DefaultListCellRenderer {    
    @Override
    public Component getListCellRendererComponent(JList<?> list, Object value,
            int index, boolean isSelected, boolean cellHasFocus) {
        super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
        
        IconItem item = (IconItem) value;
        
        if (item == null) return this;
        
        this.setText("");
        this.setIcon(item.icon);
        
        return this;
    }
}